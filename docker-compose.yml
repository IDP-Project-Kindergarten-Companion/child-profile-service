# docker-compose.yml for child-profile-service
# Assumes running alongside other services on a shared network ('app-network')

services:
  # Child Profile Service
  child-profile-service:
    build: . # Build from the Dockerfile in the current directory
    container_name: child_profile_app
    ports:
      # Map host port 5002 to the container's internal port 5000
      # Adjust host port (5002) if needed to avoid conflicts
      - "8083:5002"
    environment:
      # --- Service Dependencies ---
      # URL for the *real* DB Interact service (using service name from shared network)
      # Ensure 'db-interact-service' is the correct service name defined in your main/combined compose file
      # and that it exposes port 5000 internally.
      # DB_INTERACT_SERVICE_URL: http://localhost:8082
      DB_INTERACT_SERVICE_URL: http://db-interact-service:8082


      # --- Flask Settings ---
      FLASK_APP: app.py
      FLASK_ENV: development # Change to production later

    volumes:
      # Mount local code for development hot-reloading (optional)
      # Ensures changes in app.py are reflected without rebuilding image
      - ./app.py:/app/app.py
      # Mount the package directory if you revert to that structure
      # - ./child_profile_service:/app/child_profile_service

    networks:
      # Connect to the shared network used by other services
      - app-network
    # depends_on: # Only needed if db-interact-service is defined *in this same file*
      # - db-interact-service

# Define the shared network. It might be defined in another primary compose file.
# If defined elsewhere, declare it as external here.
networks:
  app-network:
    # If this file is the main definition for the network:
    driver: bridge
    # If the network is defined in another docker-compose file (e.g., a root one):
    # external: true

# Volumes are typically defined in the main compose file or managed automatically.
# No volumes needed specifically for this service unless it stores local files.

